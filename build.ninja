# File: build.ninja
# Purpose: Build the project
# SPDX-License-Identifier: GPL-3.0-or-later

rule cxx
  command = clang++ -Iinclude -O2 -std=c++11 -fno-rtti -fno-exceptions -nostdinc++ -Wall -Wextra -c $in -o $out
  description = CXX $out

rule cc
  command = clang -Iinclude -O2 -std=c11 -Wall -Wextra $in -o $out
  description = CC $out

rule asm
  command = clang -O2 -c $in -o $out
  description = ASM $out

rule ar
  command = ar rv $out $in
  description = AR $out

build libminimk/errno/errno_linux.o: cxx libminimk/errno/errno_linux.cpp
build libminimk/poll/poll_linux.o: cxx libminimk/poll/poll_linux.cpp

build libminimk/runtime/runtime.o: cxx libminimk/runtime/runtime.cpp
build libminimk/runtime/stack_linux.o: cxx libminimk/runtime/stack_linux.cpp
build libminimk/runtime/switch_linux_amd64.o: asm libminimk/runtime/switch_linux_amd64.S

build libminimk/socket/socket_linux.o: cxx libminimk/socket/socket_linux.cpp

build libminimk.a: ar $
  libminimk/errno/errno_linux.o $
  libminimk/poll/poll_linux.o $
  libminimk/runtime/runtime.o $
  libminimk/runtime/stack_linux.o $
  libminimk/runtime/switch_linux_amd64.o $
  libminimk/socket/socket_linux.o

build examples/runtime/00_coroutine_hello.exe: cc examples/runtime/00_coroutine_hello.c libminimk.a

build examples/runtime/01_coroutine_pingpong.exe: cc examples/runtime/01_coroutine_pingpong.c libminimk.a
